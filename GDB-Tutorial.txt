GDB - Ultilização básica (comandos):

Compilar programa com -g (-g3)

═════════════════════════════╣ Iniciação :
gdb ./programa             	# abre o programa no GDB
gdb ./programa core		# abre com um arquivo core dump
gdb --args ./programa arg1 arg2 # passa argumentos
═════════════════════════════╣ Execução :
run (ou r)               	# inicia o programa dentro do gdb
run arg1 arg2            	# roda com argumentos
start                    	# roda até a primeira instrução da main()
continue (ou c)          	# continua execução após um breakpoint
kill                     	# mata a execução do programa
quit (ou q)              	# sai do gdb
═════════════════════════════╣ Breakpoints :
break main                 	# coloca breakpoint no início da main
break 25                   	# coloca breakpoint na linha 25 do arquivo atual
break arquivo.c:40         	# coloca breakpoint na linha 40 de arquivo.c
break funcao               	# coloca breakpoint no início de uma função
info breakpoints            	# lista todos os breakpoints
delete                      	# apaga todos os breakpoints
delete N                    	# apaga breakpoint N
disable/enable N            	# desativa/ativa breakpoint
═════════════════════════════╣ Navegação :
next (ou n)                	# executa a próxima linha (não entra em funções)
step (ou s)                	# executa a próxima linha (entra em funções)
finish                     	# executa até sair da função atual
until 30                   	# executa até a linha 30
═════════════════════════════╣ Inspeção :
print var                  	# imprime valor de uma variável
print *ptr                 	# imprime valor apontado por um ponteiro
display var                	# mostra valor da variável a cada passo
undisplay                  	# remove displays ativos
info locals                	# mostra variáveis locais da função atual
info args                  	# mostra argumentos da função atual
backtrace (ou bt)          	# mostra stack trace (pilha de chamadas)
frame N                    	# muda para o frame N (call stack)
info registers             	# mostra registradores da CPU
x/10x addr                 	# examina memória (10 valores em hexa a partir de addr)
═════════════════════════════╣ Comandos úteis de controle :
list (ou l)                	# mostra código fonte
list 20,40                 	# mostra linhas de 20 a 40
info functions             	# lista funções conhecidas
info variables             	# lista variáveis globais



